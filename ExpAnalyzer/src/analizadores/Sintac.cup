package analizadores; 
import java_cup.runtime.*;
import java.util.LinkedList;

parser code 
{:
     public String resultado = "";
        public static LinkedList<Object> instrucciones;
        public void syntax_error(Symbol s)
        {
            System.err.println("Error en la Linea " + (s.right+1) +" Columna "+(s.left+1)+ ". Identificador "+s.value + " no reconocido. Se ha recuperado del error." );
        }

        public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
        {
            System.err.println("Error en la Linea " + (s.right+1)+ " Columna "+(s.left+1)+". Identificador " +s.value + " no reconocido.");
        }
:} 

action code
{:  :}

terminal String LLAVEIZ,LLAVEDER,CONJ,FLECHA;
terminal String SEPARADOR,DISYUNCION,COMA,COLOCHO;
terminal String CONCATENACION,DOSPUNTOS,MAS,POR;
terminal String PUNTOYCOMA,INTERROGACION;
terminal String ID,CADENA,DIGITO;
terminal String LETRA,SIMBOLO;

non terminal INIT;
non terminal LinkedList<Object> instrucciones;
non terminal instruc,unitario;
non terminal defconj, rangocolocho,elementolista;
non terminal LinkedList<Interfaces.expresiones.primitivo> lista;
non terminal expregular;
non terminal lexemas, lexema;


start with INIT; 

INIT::= LLAVEIZ instrucciones:a  LLAVEDER{: instrucciones = a; :}
;

instrucciones ::= instrucciones:a instruc:b {:RESULT = a; RESULT.add(b);:}
                | instruc:a                 {: RESULT = new LinkedList<>(); RESULT.add(a); :}
;

instruc ::= defconj:a PUNTOYCOMA {:RESULT = a;:}
        | ID FLECHA    expregular PUNTOYCOMA{::}
; 

defconj::=CONJ DOSPUNTOS ID:a FLECHA unitario:b COLOCHO unitario:c {:RESULT = new Interfaces.expresiones.conj_rango(aleft,aright,a,b,c);:}
        | lista{::}
;

unitario ::= LETRA:a {:RESULT = new Interfaces.expresiones.primitivo(aleft,aright,a);:}
            |DIGITO:a {:RESULT = new Interfaces.expresiones.primitivo(aleft,aright,a);:}
            |SIMBOLO:a {:RESULT = new Interfaces.expresiones.primitivo(aleft,aright,a);:}
;
